<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2019-10-07T20:31:13+08:00</updated><id>/feed.xml</id><title type="html">fw0x</title><subtitle>Stay hungry, stay foolish.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2019/09/15/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2019-09-15T18:16:14+08:00</published><updated>2019-09-15T18:16:14+08:00</updated><id>/jekyll/update/2019/09/15/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2019/09/15/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">【读书笔记】让云触手可及——微软云计算实践指南</title><link href="/2019/09/09/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E8%AE%A9%E4%BA%91%E8%A7%A6%E6%89%8B%E5%8F%AF%E5%8F%8A-%E5%BE%AE%E8%BD%AF%E4%BA%91%E8%AE%A1%E7%AE%97%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97.html" rel="alternate" type="text/html" title="【读书笔记】让云触手可及——微软云计算实践指南" /><published>2019-09-09T00:00:00+08:00</published><updated>2019-09-09T00:00:00+08:00</updated><id>/2019/09/09/%E3%80%90%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E3%80%91%E8%AE%A9%E4%BA%91%E8%A7%A6%E6%89%8B%E5%8F%AF%E5%8F%8A%E2%80%94%E2%80%94%E5%BE%AE%E8%BD%AF%E4%BA%91%E8%AE%A1%E7%AE%97%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97</id><content type="html" xml:base="/2019/09/09/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E8%AE%A9%E4%BA%91%E8%A7%A6%E6%89%8B%E5%8F%AF%E5%8F%8A-%E5%BE%AE%E8%BD%AF%E4%BA%91%E8%AE%A1%E7%AE%97%E5%AE%9E%E8%B7%B5%E6%8C%87%E5%8D%97.html">&lt;h1 id=&quot;读书笔记让云触手可及微软云计算实践指南&quot;&gt;【读书笔记】让云触手可及——微软云计算实践指南&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;书名：让云触手可及——微软云计算实践指南&lt;/li&gt;
  &lt;li&gt;作者：赵立威、方国伟&lt;/li&gt;
  &lt;li&gt;出版社：电子工业出版社&lt;/li&gt;
  &lt;li&gt;阅读日期：2019年9月8日～9月15日&lt;/li&gt;
  &lt;li&gt;耗时：8小时&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;云计算的前世今生&quot;&gt;云计算的前世今生&lt;/h2&gt;

&lt;h3 id=&quot;我们需要什么样的计算&quot;&gt;我们需要什么样的计算&lt;/h3&gt;

&lt;p&gt;计算模式的演变：
主机计算 -&amp;gt; CS模式 -&amp;gt; Web模式 -&amp;gt; 云计算&lt;/p&gt;

&lt;h3 id=&quot;什么是云计算&quot;&gt;什么是云计算&lt;/h3&gt;

&lt;p&gt;云计算（英语：cloud computing），是一种基于互联网的计算方式，通过这种方式，共享的软硬件资源和信息可以按需求提供给计算机各种终端和其他设备，使用服务商提供的计算机基建作计算和资源。（https://zh.w ikipedia.org/wiki/%E9%9B%B2%E7%AB%AF%E9%81%8B%E7%AE%97）&lt;/p&gt;

&lt;p&gt;云计算是一个提供便捷的可通过网络访问的一个可定制的计算资源共享池能力的模式（计算资源包括网络、服务器、存储、应用和服务）；这些资源能够快速部署，并只需要很少的管理工作或与服务供应商很少的交互。（美国国家技术和标准研究院 NIST，National Institute of Standards and Technology）&lt;/p&gt;

&lt;p&gt;适合云计算的典型场景&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;间断性应用场景&lt;/li&gt;
  &lt;li&gt;快速增长应用场景&lt;/li&gt;
  &lt;li&gt;需求突增应用场景&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;为什么称为云计算？
想一想我们以前在画应用系统架构图的时候用什么图形来表示互联网或Web。没错，是云。这正是人们把这种基于互联网和Web的计算形象地称为云计算的最直接原因。&lt;/p&gt;

&lt;h3 id=&quot;云计算的特点&quot;&gt;云计算的特点&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;按需服务&lt;/li&gt;
  &lt;li&gt;资源池&lt;/li&gt;
  &lt;li&gt;高可扩展性&lt;/li&gt;
  &lt;li&gt;弹性服务&lt;/li&gt;
  &lt;li&gt;自服务、自动化和虚拟化&lt;/li&gt;
  &lt;li&gt;便捷网络访问&lt;/li&gt;
  &lt;li&gt;服务可度量&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;云计算的spi模型&quot;&gt;云计算的SPI模型&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;软件即服务（SaaS, Software as a Service）&lt;/li&gt;
  &lt;li&gt;平台即服务（PaaS, Platform as a Service）&lt;/li&gt;
  &lt;li&gt;基础设施即服务（IaaS, Infrastructure as a Service）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;saas特点&quot;&gt;SaaS特点&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;用户主要通过Web浏览器来使用互联网上的软件服务&lt;/li&gt;
  &lt;li&gt;多租户（Multi-tenant）&lt;/li&gt;
  &lt;li&gt;用户不必购买软件，只需按需租用软件或通过广告模式免费使用&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;典型应用：在线邮件服务、网络会议、在线杀毒、在线CRM、在线HR、在线进销存、在线项目管理等。&lt;/p&gt;

&lt;p&gt;针对用户：应用最终用户&lt;/p&gt;

&lt;h4 id=&quot;paas特点&quot;&gt;PaaS特点&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;提供应用服务平台的编程接口，开发人员根据平台接口进行应用程序开发&lt;/li&gt;
  &lt;li&gt;提供应用的托管平台，针对平台开发的应用程序一般只能部署在该平台上&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;典型应用：Windows Azure平台、Google App Engine等&lt;/p&gt;

&lt;p&gt;针对用户：开发人员&lt;/p&gt;

&lt;h4 id=&quot;iaas特点&quot;&gt;IaaS特点&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;以服务的形式提供虚拟硬件资源，包括服务器、存储、网络等&lt;/li&gt;
  &lt;li&gt;用户对基础设施环境需要自己进行系统管理&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;典型应用：AWS（Amazon Web Service）的弹性计算服务（EC2）、简单存储服务（S3）&lt;/p&gt;

&lt;p&gt;针对用户：IT管理人员&lt;/p&gt;

&lt;h3 id=&quot;云计算的部署模型&quot;&gt;云计算的部署模型&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;公有云&lt;/li&gt;
  &lt;li&gt;私有云&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;公有云&quot;&gt;公有云&lt;/h4&gt;

&lt;p&gt;有时也称外部云，云计算的服务对象没有特定限制。&lt;/p&gt;

&lt;p&gt;优点：对于使用者，应用及数据都存放在公有云平台上，自己无须前期的大量投资和漫长的建设过程。&lt;/p&gt;

&lt;p&gt;问题：用户对应用和数据的安全、隐私等存在担心，可用性不受使用者控制。&lt;/p&gt;

&lt;h4 id=&quot;私有云&quot;&gt;私有云&lt;/h4&gt;

&lt;p&gt;有时也称内部云，组织机构建设的专供自己使用的云平台，比较适合有众多分支机构的大型企业或政府部门。&lt;/p&gt;

&lt;p&gt;优点：部署在企业内部网络，数据安全性、系统可用性都可由自己控制。&lt;/p&gt;

&lt;p&gt;问题：依然有大量的前期投资，还是传统的商业模型；规模相对公有云一般来说要小得多，经济学上的规模效应无法充分发挥
本质上是机构应用云计算技术来提高自身服务效率的一种方式&lt;/p&gt;

&lt;h4 id=&quot;混合云&quot;&gt;混合云&lt;/h4&gt;

&lt;p&gt;是一种用户使用云计算服务的方式。指用户既使用了公有云，又使用了私有云。&lt;/p&gt;

&lt;h4 id=&quot;发展趋势&quot;&gt;发展趋势&lt;/h4&gt;

&lt;p&gt;传统数据中心 -&amp;gt; 虚拟化数据中心 -&amp;gt; 私有云 -&amp;gt; 公有云&lt;/p&gt;

&lt;h3 id=&quot;云计算对it产业的影响&quot;&gt;云计算对IT产业的影响&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;硬件模型的改变
以前：选择大型服务器或高端小型机
现在：向采用标准化、低成本的硬件，通过软件方式横向扩展&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;应用模型的改变
以前：设计时面对传统的物理资源，非功能性需求往往采用手工配置方式实现
现在：快速构建高可用并几乎可以无限扩展的应用；用户消费服务的方式更加灵活，大量计算工作迁移到云计算平台上，终端设备计算要求相对有所下降&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;服务模型的改变
以前：销售软件许可证，用户要购买软件和采购与之配套的硬件，并需要专人运维
现在：按照用户使用量来计费，免除用户对硬件、网络安全设备和软件升级维护的支出&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;云计算的价值&quot;&gt;云计算的价值&lt;/h3&gt;

&lt;h4 id=&quot;降低成本&quot;&gt;降低成本&lt;/h4&gt;

&lt;p&gt;传统IT服务方式下，不同应用之间没有硬件共享能力，对硬件的配置要求是所有应用系统高峰值的总和。&lt;/p&gt;

&lt;p&gt;在私有云方式下，不同应用之间可以共享一个资源池，理想状态下对硬件需求是所有应用系统累加的高峰时刻。&lt;/p&gt;

&lt;p&gt;当不同应用之间的资源需求在时间上比较分散时，从资源利用率方面私有云的效果会更加明显。应用程序数量越多，相互之间差异的可能性越大，越能显现云计算的规模效应和共享优势。&lt;/p&gt;

&lt;h4 id=&quot;把固定成本转变为可变的运营成本&quot;&gt;把固定成本转变为可变的运营成本&lt;/h4&gt;

&lt;p&gt;数据中心及软硬件需要前期投资，从财务上来看属于固定资产，按照会计原则根据使用年限折旧，不能准确反映资源使用率和业务的发展情况。&lt;/p&gt;

&lt;p&gt;采用云计算的方式，可以大大提高公司整体的固定资产投资回报率，让企业更有效的分配在战略业务和IT服务之间的投入。&lt;/p&gt;

&lt;h4 id=&quot;云计算对不同企业的价值&quot;&gt;云计算对不同企业的价值&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;价值&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;大企业&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;中小企业&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ISV&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;降低企业IT投资&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;专注核心业务创新&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;灵活性&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;多租户&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;更好的运维&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;降低IT进入门槛&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;更低的开发成本和运维成本&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;√&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;提升用户体验&quot;&gt;提升用户体验&lt;/h4&gt;

&lt;p&gt;使用户从底层复杂的技术细节中解放了出来，可以把注意力放在相对高级、更靠近业务的工作中去。&lt;/p&gt;

&lt;p&gt;传统方式下，用户申请计算资源需要等待几天、几周甚至是几个月；云计算能够动态分配资源，用户一般只需要几分钟甚至更短的时间就可以得到想要的资源。&lt;/p&gt;

&lt;p&gt;还可以帮助用户高效完成工作。高效不一定指能多快的做事情，而是有多少事由于自动化不用做了。&lt;/p&gt;

&lt;h4 id=&quot;绿色环保&quot;&gt;绿色环保&lt;/h4&gt;

&lt;p&gt;相同计算能力下，云计算数据中心的能效指标（PUE，Power Usage Effectiveness）比传统数据中心能节约60%以上的电能消耗。&lt;/p&gt;

&lt;h3 id=&quot;云生态系统&quot;&gt;云生态系统&lt;/h3&gt;

&lt;p&gt;三个核心角色&lt;/p&gt;

&lt;p&gt;使用者：各种云计算服务的最终使用者，包括个人消费者、政府、教育和企业客户。&lt;/p&gt;

&lt;p&gt;提供者：各种云计算服务的提供商，包括SaaS、PaaS和IaaS提供商。&lt;/p&gt;

&lt;p&gt;建设者：为提供商提供各种基础资源、解决方案和服务的供应商，如软硬件产品、信息安全、支付、网络服务等。&lt;/p&gt;

&lt;p&gt;云计算的先锋：亚马逊AWS。
对于从事电子商务的亚马逊来说，为了保证其在线服务在圣诞节前夕的购物旺季能够正常运行，就必须配置能够满足高峰需求的软硬件设施。为了充分利用这些其他非高峰时期闲置的IT资源和已有的技术团队，开始对外提供计算和存储的租用服务，逐渐形成了一系列的AWS服务。&lt;/p&gt;

&lt;h3 id=&quot;云计算带来的新挑战&quot;&gt;云计算带来的新挑战&lt;/h3&gt;

&lt;p&gt;人们往往过高地估计一个新概念在短期内的作用，然而又过低地估计它长期的影响。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;新的IT基础设施挑战&lt;/li&gt;
  &lt;li&gt;新的用户隐私挑战&lt;/li&gt;
  &lt;li&gt;新的安全挑战&lt;/li&gt;
  &lt;li&gt;新的数据主权挑战&lt;/li&gt;
  &lt;li&gt;新的立法挑战&lt;/li&gt;
  &lt;li&gt;新的标准挑战&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;企业云计算路线图&quot;&gt;企业云计算路线图&lt;/h2&gt;

&lt;h3 id=&quot;cio看云计算&quot;&gt;CIO看云计算&lt;/h3&gt;

&lt;h4 id=&quot;从soa到云计算&quot;&gt;从SOA到云计算&lt;/h4&gt;

&lt;p&gt;业务与IT实现有一个差异，而架构是沟通两者的一个桥梁。SOA的出现为IT人员与业务人员进行沟通提供了一个良好的机会和基础。&lt;/p&gt;

&lt;p&gt;SOA引入松耦合的架构，即企业服务总线（ESB，Enterprise Service Bus），把业务集成为相互连接的、可重复的任务或服务，从而增加业务流程的灵活性。&lt;/p&gt;

&lt;p&gt;SOA让IT部门学会从服务的角度考虑技术的应用。不用关心服务具体运行在什么平台之上，也不用关心服务实例的扩展性如何，而只需要关心服务的质量（QOS，Quality Of Service）和服务水平协议（SLA，Service Level Agreement）是否满足。&lt;/p&gt;

&lt;p&gt;SOA关注在业务与IT的结合之上，而云计算关注在让IT作为一种服务来供应的模式，两者可以非常好的结合在一起，从不同角度为企业提供灵活性。&lt;/p&gt;

&lt;h4 id=&quot;云计算服务的管理&quot;&gt;云计算服务的管理&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;服务的监控和测量&lt;/li&gt;
  &lt;li&gt;服务目录&lt;/li&gt;
  &lt;li&gt;配置管理数据库&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;如何选择云计算&quot;&gt;如何选择云计算&lt;/h3&gt;

&lt;h4 id=&quot;私有还是公有&quot;&gt;私有还是公有&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;IT设施的位置&lt;/li&gt;
  &lt;li&gt;基础设施的差异&lt;/li&gt;
  &lt;li&gt;商务模式&lt;/li&gt;
  &lt;li&gt;控制程度的不同&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;不同企业对云计算的策略&quot;&gt;不同企业对云计算的策略&lt;/h4&gt;

&lt;p&gt;从IT服务水平的角度，公有云让小企业与大企业站在同一个水平线上成为了一种可能。&lt;/p&gt;

&lt;h4 id=&quot;发展路线&quot;&gt;发展路线&lt;/h4&gt;

&lt;p&gt;私有云计算方面的投资可为企业未来部署公有云做准备，不仅仅是技术上的变化，也是流程、业务接口，甚至是文化上的变化。&lt;/p&gt;

&lt;h4 id=&quot;云计算服务提供商的选择&quot;&gt;云计算服务提供商的选择&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;服务的类别&lt;/li&gt;
  &lt;li&gt;计费情况&lt;/li&gt;
  &lt;li&gt;标准遵循和认证&lt;/li&gt;
  &lt;li&gt;安全性&lt;/li&gt;
  &lt;li&gt;与已有系统的集成&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;不适合云计算的场景&quot;&gt;不适合云计算的场景&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;安全和合规性&lt;/li&gt;
  &lt;li&gt;硬件依赖&lt;/li&gt;
  &lt;li&gt;与现有应用集成&lt;/li&gt;
  &lt;li&gt;实时应用&lt;/li&gt;
  &lt;li&gt;缺乏需求&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;迎接云计算&quot;&gt;迎接云计算&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;增加虚拟化的投资和准备&lt;/li&gt;
  &lt;li&gt;采用标准化的和可扩展的硬件设备&lt;/li&gt;
  &lt;li&gt;统一虚拟和硬件环境的管理&lt;/li&gt;
  &lt;li&gt;优化IT服务流程&lt;/li&gt;
  &lt;li&gt;调整应用架构&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;采用云计算的五大步骤&quot;&gt;采用云计算的五大步骤&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;制定云计算战略&lt;/li&gt;
  &lt;li&gt;评估和调研&lt;/li&gt;
  &lt;li&gt;制定云计算发展路线&lt;/li&gt;
  &lt;li&gt;展开试点&lt;/li&gt;
  &lt;li&gt;实施推广&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;实施云计算的五大建议&quot;&gt;实施云计算的五大建议&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;拥抱变化&lt;/li&gt;
  &lt;li&gt;马上行动&lt;/li&gt;
  &lt;li&gt;新的决策选择&lt;/li&gt;
  &lt;li&gt;从外包的角度考虑云计算服务&lt;/li&gt;
  &lt;li&gt;制定后备计划&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;云的基石虚拟化360度&quot;&gt;云的基石：虚拟化360度&lt;/h2&gt;

&lt;h3 id=&quot;云计算与虚拟化技术&quot;&gt;云计算与虚拟化技术&lt;/h3&gt;

&lt;p&gt;虚拟化是将一个计算机资源从另一个计算机资源当中分离的技术。&lt;/p&gt;

&lt;p&gt;服务器虚拟化，或称计算机虚拟化，就是将操作系统和应用程序打包在一起以形成一个虚拟机，然后在运行主操作系统或Hypervisor（一个瘦软件层，提供硬件的基本接口）的物理服务器上运行。此虚拟机并不依赖物理服务器操作系统。这使得单台物理服务器可运行多个虚拟机，同时提供分离和安全防护，每个虚拟机都像在自己的硬件上运行一样。&lt;/p&gt;

&lt;h3 id=&quot;服务器虚拟化技术&quot;&gt;服务器虚拟化技术&lt;/h3&gt;

&lt;p&gt;可将未充分利用的服务器工作负载整合至可充分利用的机器上，减少物理服务器的数量并因较少的硬件、用电和管理负荷而降低成本，还可建立更为动态的IT基础架构。&lt;/p&gt;

&lt;h4 id=&quot;基本原理&quot;&gt;基本原理&lt;/h4&gt;

&lt;p&gt;根据虚拟化层（VMM，Virtual Machine Monitor）和物理硬件之间的关系处理方式，有三种常见的体系结构：
Type-2 VMM：创建一个运行时环境，进程可以在此环境中执行一组指令，而无须依赖主机系统。隔离的是不同进程，允许单个应用程序在不同的OS上运行。
应用实例：Java虚拟机，即JVM。&lt;/p&gt;

&lt;p&gt;Hybrid VMM：在主机OS上运行并帮助创建上层虚拟机，只在部分时间运行虚拟机。VMM会极大增加开销，不适合资源密集的工作负载。适用于轻量级的虚拟机，同时对物理硬件资源的调度效率没有较高要求。
应用实例：VMware Workstation。&lt;/p&gt;

&lt;p&gt;Type-1 VMM：直接在硬件上方运行，最初由IBM于20世纪60年代针对大型机系统而设计，最近连同各种解决方案（包括Windows Hyper-V）在x86平台上提供。
Typer-1 VMM目前的两种常见实现：微内核化和整体化。
整体化管理程序方法，在单层内托管管理程序VMM，还包括大部分必需组件（例如内核、设备驱动程序和I/O堆栈）。应用实例：VMware ESX。
微内核化方法，使用非常瘦的专用管理程序，仅执行核心任务以确保分区隔离和内存管理，不包括I/O堆栈和设备驱动程序。应用实例：Hyper-V。&lt;/p&gt;

&lt;h4 id=&quot;hyper-v体系架构&quot;&gt;Hyper-V体系架构&lt;/h4&gt;

&lt;p&gt;通过分区的方式实现隔离。分区是指一组隔离的单元，被分配了物理内存空间与虚拟处理器资源，其中运行着操作系统。&lt;/p&gt;

&lt;p&gt;父分区，运行着Windows Server，其中的虚拟化堆栈（Virtualization Stack）可以直接访问物理设备。&lt;/p&gt;

&lt;p&gt;通过父分区，可以创建子分区并在其中运行来宾操作系统（Guest Operating System）。&lt;/p&gt;

&lt;p&gt;子分区本身并不能访问物理处理器，它们只有虚拟的处理器同时运行在虚拟的内存地址空间，各个子分区的虚拟内存空间是相互独立的。Hypervisor层执行处理器中断。&lt;/p&gt;

&lt;p&gt;同时，子分区对其他硬件资源也无法直接访问，它们通过虚拟设备（Virtual Device，VDev）的方式访问硬件。对虚拟设备的请求一般由运行在子分区中的虚拟服务用户端（Virtualization Service Consumer，VSC），通过VMBus或者Hypervisor层转到父分区，父分区通过其中运行的虚拟服务端程序（Virtualization Service Provider，VSP）处理。&lt;/p&gt;

&lt;p&gt;即 VDev -&amp;gt; VSC &amp;lt;-&amp;gt; VMBus &amp;lt;-&amp;gt; VSP&lt;/p&gt;

&lt;h3 id=&quot;虚拟化的管理&quot;&gt;虚拟化的管理&lt;/h3&gt;

&lt;p&gt;一旦虚拟化，或基于虚拟化技术的云计算进入实际应用阶段，几乎所有的用户都会将工作重心转至对IT环境的管理。只有真正高效灵活的管理方法与管理工具，才能切实实现虚拟化所带来的价值。&lt;/p&gt;

&lt;p&gt;管理挑战包括：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;如何有效管理物理机与虚拟机混合的IT环境。&lt;/li&gt;
  &lt;li&gt;如何管理不同的虚拟化技术。&lt;/li&gt;
  &lt;li&gt;针对虚拟化技术本身实现高效管理。&lt;/li&gt;
  &lt;li&gt;成本。管理产品与工具本身获取成本；管理工具在长期运营中其整合度、二次开发、运维人力所带来的成本。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;企业动态数据中心构建&quot;&gt;企业动态数据中心构建&lt;/h2&gt;

&lt;h3 id=&quot;企业it的发展&quot;&gt;企业IT的发展&lt;/h3&gt;

&lt;p&gt;传统数据中心缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;资源利用率低。主要原因是，按照各业务最高峰使用量来配置资源。&lt;/li&gt;
  &lt;li&gt;资源孤岛。资源分配给各应用之后相对固化，很难调配。&lt;/li&gt;
  &lt;li&gt;自动化程度较低。资源配置和部署过程多采用人工方式，无相应平台支持，无自服务和自动部署能力，使大量人力资源耗费在重复性工作上。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;数据中心架构演变：&lt;/p&gt;

&lt;p&gt;集中式大型主机 -&amp;gt; 分散式UNIX小型服务器 -&amp;gt; 逻辑上集中式巨型计算机。&lt;/p&gt;

&lt;h3 id=&quot;动态数据中心基础&quot;&gt;动态数据中心基础&lt;/h3&gt;

&lt;p&gt;思想：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;以服务为核心。屏蔽底层IT技术的复杂性，将IT以服务形式展现给最终用户。&lt;/li&gt;
  &lt;li&gt;提供灵活性。工作负载可移动性；可快速部署新服务；可根据需求增加或减少使用量。&lt;/li&gt;
  &lt;li&gt;公共设施化。所有基层设施资源，包括网络、存储和服务器等，都设计成一个统一平台。&lt;/li&gt;
  &lt;li&gt;最小化人工操作。可以动态地执行运营任务，自动侦测和响应故障情况，根据负载自动扩缩容。&lt;/li&gt;
  &lt;li&gt;透明的费用明细。提供根据服务的实际使用量计算的计费模型。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基本架构模型：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;资源池。经过虚拟化抽象之后的服务器、网络和存储等资源的集合。&lt;/li&gt;
  &lt;li&gt;物理故障域。当上级硬件设备故障时会同时出错的一个服务器集合。&lt;/li&gt;
  &lt;li&gt;升级域。一个会被同时升级的服务器的逻辑集合。&lt;/li&gt;
  &lt;li&gt;预留容量。为保证所有应用在升级域或故障域维护时能正常运行，在资源池中预留的一部分资源。&lt;/li&gt;
  &lt;li&gt;扩展单元。事先定义好的用来扩展数据中心的单元，包括服务器、网络设备、存储、电源和制冷设备等。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;动态数据中心方案&quot;&gt;动态数据中心方案&lt;/h3&gt;

&lt;p&gt;整体架构：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;资源层。&lt;/li&gt;
  &lt;li&gt;虚拟化层。&lt;/li&gt;
  &lt;li&gt;管理层。&lt;/li&gt;
  &lt;li&gt;服务层。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自服务门户：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;账户信息管理。&lt;/li&gt;
  &lt;li&gt;自服务操作。&lt;/li&gt;
  &lt;li&gt;自服务监控。&lt;/li&gt;
  &lt;li&gt;服务生命周期管理。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;核心功能实现&quot;&gt;核心功能实现&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;面向服务的接口设计。&lt;/li&gt;
  &lt;li&gt;虚拟化服务。&lt;/li&gt;
  &lt;li&gt;系统监控服务。&lt;/li&gt;
  &lt;li&gt;配置管理服务。&lt;/li&gt;
  &lt;li&gt;数据保护服务。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;云中平台&quot;&gt;云中平台&lt;/h2&gt;

&lt;h3 id=&quot;windows-azure平台&quot;&gt;Windows Azure平台&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Windows Azure：基于Windows环境的应用托管、数据存储服务。&lt;/li&gt;
  &lt;li&gt;SQL Azure：基于SQL Server的数据库服务。&lt;/li&gt;
  &lt;li&gt;Windows Azure Platform AppFabric：应用级别的服务平台。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows Azure的计算服务：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Web Role：运行在IIS上的Web服务。&lt;/li&gt;
  &lt;li&gt;Worker Role：托管应用代码。&lt;/li&gt;
  &lt;li&gt;Azure API：封装了Windows Azure的管理服务。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Windows Azure的存储服务：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Blob：大型二进制对象存储。例如图片、视频、音频文件。&lt;/li&gt;
  &lt;li&gt;Driver：虚拟硬盘，类NTFS。&lt;/li&gt;
  &lt;li&gt;Table：结构化存储。&lt;/li&gt;
  &lt;li&gt;Queue：消息队列，可靠的异步消息传递。&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">【读书笔记】让云触手可及——微软云计算实践指南</summary></entry></feed>